apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion COMPILE_VERSION
    buildToolsVersion BUILD_VERSION
    defaultConfig {
        applicationId "com.brainsocket.globalpages"
        minSdkVersion MIN_VERSION
        targetSdkVersion COMPILE_VERSION
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    /*support library started*/
    implementation "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    implementation "com.android.support:design:$SUPPORT_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_VERSION"
    implementation "com.android.support:preference-v7:$SUPPORT_VERSION"
    implementation "com.android.support:cardview-v7:$SUPPORT_VERSION"
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    implementation 'com.google.android:flexbox:1.0.0'

    /*support library ended*/

    /*support service started*/
    implementation "com.google.android.gms:play-services-maps:$SUPPORT_SERVICE"
    implementation "com.google.android.gms:play-services-gcm:$SUPPORT_SERVICE"
    implementation "com.google.android.gms:play-services-location:$SUPPORT_SERVICE"
    implementation "com.google.android.gms:play-services-places:$SUPPORT_SERVICE"

    /*support service ended*/

    /*networking started*/
    implementation "com.amitshekhar.android:android-networking:$Android_Networking"
    implementation "com.amitshekhar.android:jackson-android-networking:$Android_Networking"
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    /*networking ended*/

    /*view Injection started*/
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    kapt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    /*view Injection ended*/

    /*java react started*/
    implementation "io.reactivex.rxjava2:rxandroid:$RX_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$RX_VERSION"

    /*java react ended*/

    /*dagger started*/
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    /*dagger ended*/

    /*glide image loader started*/
    implementation "com.github.bumptech.glide:annotations:$GLIDE_VERSION"
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    kapt "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
    implementation "jp.wasabeef:glide-transformations:$Glide_Transformations"
    implementation "jp.co.cyberagent.android.gpuimage:gpuimage-library:$Glide_Gpuimage"

    /*glide image loader ended*/
    kapt 'com.android.databinding:compiler:3.1.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation project(':calligraphy')
    implementation project(':mainlibrary')
    implementation project(':ninepatchlibrary')
}
//kapt {
//    generateStubs = true
//}